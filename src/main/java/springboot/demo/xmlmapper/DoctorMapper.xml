<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dtkq.api.dao.DoctorMapper">


  <resultMap id="BaseResultMap" type="com.dtkq.api.entity.Doctor">
    <id column="doctor_id" jdbcType="INTEGER" property="doctorId" />
    <result column="class_id" jdbcType="INTEGER" property="classId" />
    <result column="doctor_sex" jdbcType="INTEGER" property="doctorSex" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="doctor_ch_name" jdbcType="VARCHAR" property="doctorChName" />
    <result column="doctor_en_name" jdbcType="VARCHAR" property="doctorEnName" />
    <result column="doctor_ch_position" jdbcType="VARCHAR" property="doctorChPosition" />
    <result column="doctor_en_position" jdbcType="VARCHAR" property="doctorEnPosition" />
    <result column="doctor_introduction" jdbcType="VARCHAR" property="doctorIntroduction" />
    <result column="doctor_mobile" jdbcType="VARCHAR" property="doctorMobile" />
    <result column="doctor_email" jdbcType="VARCHAR" property="doctorEmail" />
    <result column="doctor_img" jdbcType="VARCHAR" property="doctorImg" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
  </resultMap>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from doctor
    where doctor_id = #{doctorId,jdbcType=INTEGER}
  </delete>

  <insert id="insert" keyProperty="doctorId" parameterType="com.dtkq.api.entity.Doctor" useGeneratedKeys="true">
    insert into doctor (
    doctor_id,
    class_id,
    doctor_ch_name,
    doctor_en_name,
    doctor_ch_position,
    doctor_en_position,
    doctor_introduction,
    doctor_img,
    doctor_sex,
    doctor_mobile,
    doctor_email,
    ctime,
    status)
    values (
    #{doctorId,jdbcType=INTEGER},
    #{classId,jdbcType=INTEGER},
    #{doctorChName,jdbcType=VARCHAR},
    #{doctorEnName,jdbcType=VARCHAR},
    #{doctorChPosition,jdbcType=VARCHAR},
    #{doctorEnPosition,jdbcType=VARCHAR},
    #{doctorIntroduction,jdbcType=VARCHAR},
    #{doctorImg,jdbcType=VARCHAR},
    #{doctorSex,jdbcType=INTEGER},
    #{doctorMobile,jdbcType=VARCHAR},
    #{doctorEmail,jdbcType=VARCHAR},
    now(),
    0)
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.dtkq.api.entity.Doctor">
    update doctor
    set doctor_id = #{doctorId,jdbcType=INTEGER}
    <if test="classId!= null">
      ,class_id = #{classId,jdbcType=INTEGER}
    </if>
    <if test="doctorSex!= null">
      ,doctor_sex = #{doctorSex,jdbcType=INTEGER}
    </if>
    <if test="doctorChName!= null">
      ,doctor_ch_name = #{doctorChName,jdbcType=VARCHAR}
    </if>
    <if test="doctorEnName!= null">
      ,doctor_en_name = #{doctorEnName,jdbcType=VARCHAR}
    </if>
    <if test="doctorChPosition!= null">
      ,doctor_ch_position = #{doctorChPosition,jdbcType=VARCHAR}
    </if>
    <if test="doctorEnPosition!= null">
      ,doctor_en_position = #{doctorEnPosition,jdbcType=VARCHAR}
    </if>
    <if test="doctorIntroduction!= null">
      ,doctor_introduction = #{doctorIntroduction,jdbcType=VARCHAR}
    </if>
    <if test="doctorImg!= null">
      ,doctor_img = #{doctorImg,jdbcType=VARCHAR}
    </if>
    <if test="doctorMobile!= null">
      ,doctor_mobile = #{doctorMobile,jdbcType=VARCHAR}
    </if>
    <if test="doctorEmail!= null">
      ,doctor_email = #{doctorEmail,jdbcType=VARCHAR}
    </if>
    <if test="status!= null">
      ,status = #{status,jdbcType=INTEGER}
    </if>
    where doctor_id = #{doctorId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="com.dtkq.api.entity.Doctor" resultMap="BaseResultMap">
    select doctor_id, class_id, doctor_ch_name,
      doctor_en_name, doctor_ch_position, doctor_en_position,doctor_introduction,
      doctor_img,doctor_sex,doctor_mobile,doctor_email,ctime,status
    from doctor
    where doctor_id = #{doctorId,jdbcType=INTEGER}
    and status!=1
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select doctor_id, class_id, doctor_ch_name,
      doctor_en_name, doctor_ch_position, doctor_en_position,doctor_introduction,
      doctor_img,doctor_sex,doctor_mobile,doctor_email,ctime,status
    from doctor
    where status!=1
  </select>
</mapper>